<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="banner" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\banner.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="logo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\logo.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="RibbonButtonFlexConfirmMail" xml:space="preserve">
    <value>FlexConfirmMail設定</value>
  </data>
  <data name="RibbonGroupFlexConfirmMail" xml:space="preserve">
    <value>送信チェック</value>
  </data>
  <data name="SaveAndQuit" xml:space="preserve">
    <value>保存して閉じる</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="Seconds" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="ConfigWindowTitle" xml:space="preserve">
    <value>FlexConfirmMail設定</value>
  </data>
  <data name="ConfigGeneral" xml:space="preserve">
    <value>一般設定</value>
  </data>
  <data name="ConfigCount" xml:space="preserve">
    <value>送信カウントダウン設定</value>
  </data>
  <data name="ConfigCountEnabled" xml:space="preserve">
    <value>メール送信前のカウントダウンを有効化する</value>
  </data>
  <data name="ConfigCountAllowSkip" xml:space="preserve">
    <value>カウントダウンのダイアログの「いますぐ送信」ボタンを有効化する</value>
  </data>
  <data name="ConfigCountSeconds" xml:space="preserve">
    <value>送信までのカウントダウン秒数:</value>
  </data>
  <data name="ConfigWarning" xml:space="preserve">
    <value>警告設定</value>
  </data>
  <data name="ConfigSafeBccEnabled" xml:space="preserve">
    <value>To/CCに一定数以上のドメインが含まれている場合に警告する</value>
  </data>
  <data name="ConfigSafeBccThreshold" xml:space="preserve">
    <value>警告対象となるドメインの数:</value>
  </data>
  <data name="ConfigSafeBccThresholdSuffix" xml:space="preserve">
    <value>件以上</value>
  </data>
  <data name="ConfigMisc" xml:space="preserve">
    <value>その他の設定</value>
  </data>
  <data name="ConfigMainSkipIfNoExt" xml:space="preserve">
    <value>宛先が社内のみの場合は確認をスキップする</value>
  </data>
  <data name="ConfigTrustedDomains" xml:space="preserve">
    <value>社内ドメイン・アドレス設定</value>
  </data>
  <data name="TrustedDomainsPolicy" xml:space="preserve">
    <value># 社内ドメイン・アドレス設定 ###
# 組織設定により、社内ドメイン・アドレスとして以下が指定されています。
#
# {0}
#
# さらにドメイン・アドレスを追加する場合は、以下に1行ずつ入力してください。
# また、先頭に「-」をつけると、ドメイン・アドレスを除外することができます。
# 指定にはワイルドカード（*および?）も使用可能です。
# @を含む場合はアドレスが指定されたとみなします。
# @を含まない場合はドメインが指定されたとみなします。
##################################

{1}</value>
  </data>
  <data name="UnsafeDomainsPolicy" xml:space="preserve">
    <value># 注意が必要なドメイン・アドレス設定 ###
# 組織設定により、注意が必要なドメイン・アドレスとして以下が指定されています。
#
# {0}
#
# さらにドメイン・アドレスを追加する場合は、以下に1行ずつ入力してください。
# また、先頭に「-」をつけると、ドメイン・アドレスを除外することができます。
# 指定にはワイルドカード（*および?）も使用可能です。
# @を含む場合はアドレスが指定されたとみなします。
# @を含まない場合はドメインが指定されたとみなします。
##################################

{1}</value>
  </data>
  <data name="UnsafeFilesPolicy" xml:space="preserve">
    <value># 注意が必要なファイル名設定 ###
# 組織設定により、注意が必要なファイル名として以下が指定されています。
#
# {0}
#
# さらにキーワードを追加する場合は、以下に1行ずつ入力してください。
# また、先頭に「-」をつけると、キーワードを除外することができます。
# 指定にはワイルドカード（*および?）も使用可能です。
##################################

{1}</value>
  </data>
  <data name="TrustedDomainsExample" xml:space="preserve">
    <value>example.com
-example.org</value>
  </data>
  <data name="UnsafeDomainsExample" xml:space="preserve">
    <value>example.com
-example.org</value>
  </data>
  <data name="UnsafeFilesExample" xml:space="preserve">
    <value>社外秘
-除外キーワード</value>
  </data>
  <data name="TrustedDomainsTemplate" xml:space="preserve">
    <value># 社内ドメイン・アドレス設定 ###
#
# (1) 送信時に社内の宛先として扱うドメイン・アドレスを指定します。
# (2) 以下の例のように一行に一件ずつ記載します。
# (3) 冒頭が「#」から始まる行は無視されます。
# (4) 指定にはワイルドカード（*および?）を使用可能です。
# (5) @を含む場合はアドレスが指定されたとみなします。
# (6) @を含まない場合はドメインが指定されたとみなします。
#
##################################

example.com
example.org</value>
  </data>
  <data name="UnsafeDomainsTemplate" xml:space="preserve">
    <value># 注意が必要なドメイン・アドレス設定 ###
#
# (1) 送信時に警告対象とする注意ドメイン・アドレスを指定します。
# (2) 以下の例のように一行に一件ずつ記載します。
# (3) 冒頭が「#」から始まる行は無視されます。
# (4) 指定にはワイルドカード（*および?）を使用可能です。
# (5) @を含む場合はアドレスが指定されたとみなします。
# (6) @を含まない場合はドメインが指定されたとみなします。
#
##################################

example.com
example.org</value>
  </data>
  <data name="UnsafeFilesTemplate" xml:space="preserve">
    <value># 注意が必要なファイル名設定 ###
#
# (1) 添付ファイルに含まれる場合に警告する注意ワードを指定します。
# (2) 以下の例のように一行に一件ずつ記載します。
# (3) 冒頭が「#」から始まる行は無視されます。
#
##################################

社外秘
機密</value>
  </data>
  <data name="TrustedDomains" xml:space="preserve">
    <value>社内ドメイン・アドレス</value>
  </data>
  <data name="ConfigUnsafeDomains" xml:space="preserve">
    <value>注意が必要なドメイン・アドレス設定</value>
  </data>
  <data name="UnsafeDomains" xml:space="preserve">
    <value>注意が必要なドメイン・アドレス</value>
  </data>
  <data name="ConfigUnsafeFiles" xml:space="preserve">
    <value>注意が必要なファイル名設定</value>
  </data>
  <data name="UnsafeFiles" xml:space="preserve">
    <value>注意が必要なファイル名</value>
  </data>
  <data name="AboutAddon" xml:space="preserve">
    <value>このアドオンについて</value>
  </data>
  <data name="TextLog" xml:space="preserve">
    <value>動作ログ</value>
  </data>
  <data name="CountWindowTitle" xml:space="preserve">
    <value>送信カウントダウン - FlexConfirmMail</value>
  </data>
  <data name="CountSendInSeconds" xml:space="preserve">
    <value>秒後に送信します</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>送信</value>
  </data>
  <data name="SendNow" xml:space="preserve">
    <value>今すぐ送信</value>
  </data>
  <data name="MainExternal" xml:space="preserve">
    <value>外部の送信先</value>
  </data>
  <data name="MainUnsafeDomainsWarning" xml:space="preserve">
    <value>[警告] 注意が必要なドメイン（{0}）が宛先に含まれています。</value>
  </data>
  <data name="MainUnsafeDomainsWarningHint" xml:space="preserve">
    <value>このドメインは誤送信の可能性が高いため、再確認を促す警告を出してします。</value>
  </data>
  <data name="MainUnsafeFilesWarning" xml:space="preserve">
    <value>[警告] 注意が必要なファイル名（{0}）が含まれています。</value>
  </data>
  <data name="MainUnsafeFilesWarningHint" xml:space="preserve">
    <value>添付ファイルに注意が必要な単語が含まれているため、
再確認を促す警告を出しています。</value>
  </data>
  <data name="MainSafeBccWarning" xml:space="preserve">
    <value>[警告] To・Ccに{0}件以上のドメインが含まれています。</value>
  </data>
  <data name="MainSafeBccWarningHint" xml:space="preserve">
    <value>宛先に多数のドメインが検知されました。
ToおよびCcに含まれるメールアドレスはすべての受取人が確認できるため、
アナウンスなどを一斉送信する場合はBccを利用して宛先リストを隠します。</value>
  </data>
  <data name="MainFilesWarning" xml:space="preserve">
    <value>[添付ファイル] {0}</value>
  </data>
  <data name="MainTrusted" xml:space="preserve">
    <value>社内の送信先</value>
  </data>
  <data name="MainCheckAll" xml:space="preserve">
    <value>一括チェック</value>
  </data>
  <data name="MainFile" xml:space="preserve">
    <value>添付ファイル／その他の警告</value>
  </data>
  <data name="ConfigSafeNewDomainsEnabled" xml:space="preserve">
    <value>返信の宛先に今まで含まれていなかったドメインのアドレスが追加された場合に警告する</value>
  </data>
  <data name="ConfirmNewDomainsBody1" xml:space="preserve">
    <value>返信元のメールの宛先に含まれていなかったドメインの以下の宛先が追加されています。</value>
  </data>
  <data name="NewDomainDialogTitle" xml:space="preserve">
    <value>警告 - FlexConfirmMail</value>
  </data>
  <data name="ConfirmNewDomainsBody2" xml:space="preserve">
    <value>送信してよろしいですか？</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>⨉ 警告！</value>
  </data>
  <data name="MainUnsafeAddressesWarning" xml:space="preserve">
    <value>[警告] 注意が必要なアドレス（{0}）が宛先に含まれています。</value>
  </data>
  <data name="MainUnsafeAddressesWarningHint" xml:space="preserve">
    <value>このアドレスは誤送信の可能性が高いため、再確認を促す警告を出してします。</value>
  </data>
</root>