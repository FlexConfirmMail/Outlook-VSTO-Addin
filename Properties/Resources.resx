<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="banner" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\banner.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="logo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\logo.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="RibbonButtonFlexConfirmMail" xml:space="preserve">
    <value>FlexConfirmMail Options</value>
  </data>
  <data name="RibbonGroupFlexConfirmMail" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="SaveAndQuit" xml:space="preserve">
    <value>Save and Exit</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Seconds" xml:space="preserve">
    <value>seconds</value>
  </data>
  <data name="ConfigWindowTitle" xml:space="preserve">
    <value>FlexConfirmMail Options</value>
  </data>
  <data name="ConfigGeneral" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="ConfigCount" xml:space="preserve">
    <value>Countdown</value>
  </data>
  <data name="ConfigCountEnabled" xml:space="preserve">
    <value>Show a countdown clock when sending a message</value>
  </data>
  <data name="ConfigCountAllowSkip" xml:space="preserve">
    <value>Show "Send Now" button in the countdown dialog</value>
  </data>
  <data name="ConfigCountSeconds" xml:space="preserve">
    <value>Delay sending a message by</value>
  </data>
  <data name="ConfigWarning" xml:space="preserve">
    <value>To/Cc</value>
  </data>
  <data name="ConfigSafeBccEnabled" xml:space="preserve">
    <value>Enable "too many domains in To/Cc fields" warnings</value>
  </data>
  <data name="ConfigSafeBccThreshold" xml:space="preserve">
    <value>Warn if To/Cc fields contain</value>
  </data>
  <data name="ConfigSafeBccThresholdSuffix" xml:space="preserve">
    <value>domains (or more)</value>
  </data>
  <data name="ConfigMisc" xml:space="preserve">
    <value>Miscellaneous</value>
  </data>
  <data name="ConfigMainSkipIfNoExt" xml:space="preserve">
    <value>Skip confirmation if all the recpients are trusted.</value>
  </data>
  <data name="ConfigTrustedDomains" xml:space="preserve">
    <value>Configure Trusted Domains and Addresses</value>
  </data>
  <data name="TrustedDomainsPolicy" xml:space="preserve">
    <value># Trusted Domains and Addresses ###
# The following domains and addresses are trusted by Group Policy.
#
# {0}
#
# To add more domains or addresses, input entries (one per line) below.
# You can also exclude domains or addresses by adding "-" at the beginning.
# And wildcards (* and ?) are also available.
# When an entry contains @, the entry is regarded as address.
# When an entry does not contains @, the entry is regarded as domain.
##################################

{1}</value>
  </data>
  <data name="UnsafeDomainsPolicy" xml:space="preserve">
    <value># Unsafe Domains and Addresses ###
# The following domains and addresses are considered unsafe by Group Policy.
#
# {0}
#
# To add more domains or addresses, input entries (one per line) below.
# You can also exclude domains or addresses by adding "-" at the beginning.
# And wildcards (* and ?) are also available.
# When an entry contains @, the entry is regarded as address.
# When an entry does not contains @, the entry is regarded as domain.
##################################

{1}</value>
  </data>
  <data name="UnsafeFilesPolicy" xml:space="preserve">
    <value># Unsafe Files ###
# The following keywords are considered unsafe by Group Policy.
#
# {0}
#
# To add more keywords, input entries (one per line) below.
# You can also exclude keywords by adding "-" at the beginning.
# And wildcards (* and ?) are also available.
##################################

{1}</value>
  </data>
  <data name="TrustedDomainsExample" xml:space="preserve">
    <value>example.com
-example.org</value>
  </data>
  <data name="UnsafeDomainsExample" xml:space="preserve">
    <value>example.com
-example.org</value>
  </data>
  <data name="UnsafeFilesExample" xml:space="preserve">
    <value>Confidential
-ExcludedItem</value>
  </data>
  <data name="TrustedDomainsTemplate" xml:space="preserve">
    <value># Trusted Domains and Addresses ###
#
# (1) Set the list of domains and addresses to be treated as internal ones.
# (2) Enter one entry per line as follows.
# (3) Lines starting with # are ignored.
# (4) Wildcards (* and ?) are available.
# (5) When an entry contains @, the entry is regarded as address.
# (6) When an entry does not contains @, the entry is regarded as domain.
#
##################################

example.com
example.org</value>
  </data>
  <data name="UnsafeDomainsTemplate" xml:space="preserve">
    <value># Unsafe Domains and Addresses ###
#
# (1) Set the list of domains and addresses to show an "unsafe recipient" warning.
# (2) Enter one entry per line as follows.
# (3) Lines starting with # are ignored.
# (4) Wildcards (* and ?) are available.
# (5) When an entry contains @, the entry is regarded as address.
# (6) When an entry does not contains @, the entry is regarded as domain.
#
##################################

example.com
example.org</value>
  </data>
  <data name="UnsafeFilesTemplate" xml:space="preserve">
    <value># Unsafe Files ###
#
# (1) Set the list of keywords to show an "unsafe filename" warning.
# (2) Enter one entry per line as follows.
# (3) Lines starting with # are ignored.
# (4) Wildcards (* and ?) are available.
#
##################################

secret
confidential
</value>
  </data>
  <data name="TrustedDomains" xml:space="preserve">
    <value>Trusted Domains and Addresses</value>
  </data>
  <data name="ConfigUnsafeDomains" xml:space="preserve">
    <value>Configure Unsafe Domains and Addresses</value>
  </data>
  <data name="UnsafeDomains" xml:space="preserve">
    <value>Unsafe Domains and Addresses</value>
  </data>
  <data name="ConfigUnsafeFiles" xml:space="preserve">
    <value>Configure Unsafe Files</value>
  </data>
  <data name="UnsafeFiles" xml:space="preserve">
    <value>Unsafe Files</value>
  </data>
  <data name="AboutAddon" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="TextLog" xml:space="preserve">
    <value>App Logs</value>
  </data>
  <data name="CountWindowTitle" xml:space="preserve">
    <value>Countdown - FlexConfirmMail</value>
  </data>
  <data name="CountSendInSeconds" xml:space="preserve">
    <value>seconds to send</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="SendNow" xml:space="preserve">
    <value>Send Now</value>
  </data>
  <data name="MainExternal" xml:space="preserve">
    <value>External Recipients</value>
  </data>
  <data name="MainUnsafeDomainsWarning" xml:space="preserve">
    <value>[Warn] An unsafe domain "{0}" found in the recipient list</value>
  </data>
  <data name="MainUnsafeDomainsWarningHint" xml:space="preserve">
    <value>This domain is registered as unsafe. Please recheck and confirm.</value>
  </data>
  <data name="MainUnsafeFilesWarning" xml:space="preserve">
    <value>[Warn] An unsafe keyword ({0}) found in the attachment list</value>
  </data>
  <data name="MainUnsafeFilesWarningHint" xml:space="preserve">
    <value>This filename is registered as unsafe. Please recheck and confirm.</value>
  </data>
  <data name="MainSafeBccWarning" xml:space="preserve">
    <value>[Warn] To/Cc fields contain no less than {0} domains</value>
  </data>
  <data name="MainSafeBccWarningHint" xml:space="preserve">
    <value>Beware that To/Cc fields are visible to any recipients,
so please use Bcc when sending an message to unrelated parties.</value>
  </data>
  <data name="MainTrusted" xml:space="preserve">
    <value>Internal Recipients</value>
  </data>
  <data name="MainCheckAll" xml:space="preserve">
    <value>Check all</value>
  </data>
  <data name="MainFilesWarning" xml:space="preserve">
    <value>[Attachment] {0}</value>
  </data>
  <data name="MainFile" xml:space="preserve">
    <value>Attachments / Warnings</value>
  </data>
  <data name="ConfigSafeNewDomainsEnabled" xml:space="preserve">
    <value>Confirm when any recipients with domains different from any existing recipients are added</value>
  </data>
  <data name="ConfirmNewDomainsBody1" xml:space="preserve">
    <value>There are recipients with domains not included in the recipients of the original message.</value>
  </data>
  <data name="NewDomainDialogTitle" xml:space="preserve">
    <value>Warning  - FlexConfirmMail</value>
  </data>
  <data name="ConfirmNewDomainsBody2" xml:space="preserve">
    <value>Do you really want to send this message?</value>
  </data>
  <data name="Warrning" xml:space="preserve">
    <value>Warning!</value>
  </data>
  <data name="MainUnsafeAddressesWarning" xml:space="preserve">
    <value>[Warn] An unsafe address "{0}" found in the recipient list</value>
  </data>
  <data name="MainUnsafeAddressesWarningHint" xml:space="preserve">
    <value>This address is registered as unsafe. Please recheck and confirm.</value>
  </data>
</root>